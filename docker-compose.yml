version: "3.7"

# Dockerfileで定義したアプリケーションコンテナの構築で必要な情報を提供する
x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: '2.6.5'
      PG_MAJOR: '11'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.21.1'
      BUNDLER_VERSION: '2.1.2'
  environment: &env
    RAILS_ENV: ${RAILS_ENV:-development}      
    NODE_ENV: ${NODE_ENV:-development}
  tmpfs:
    - /tmp

# Rubyのサービスで共有するボリュームを提供する
x-backend-volumes: &backend-volumes
  volumes:
    - .dockerdev/.psqlrc:/root/.psqlrc:ro
    - .dockerdev/.bashrc:/root/.bashrc:ro
    - .:/app:cached
    - bundle:/bundle
    - rails_cache:/app/tmp/cache
    - node_modules:/app/node_modules
    - packs:/app/public/packs

# Rubyのサービスで共有する振る舞いを提供する
x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true 
  environment:
    <<: *env
    REDIS_URL: redis://redis:6379/
    BOOTSNAP_CACHE_DIR: /bundle/bootsnap
    WEBPACKER_DEV_SERVER_HOST: webpacker
    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
    MALLOC_ARENA_MAX: 2
    WEB_CONCURRENCY: ${WEB_CONCURRENCY:-1}
  depends_on:
    - postgres
    - redis

services:
  rails:
    <<: *backend
    <<: *backend-volumes
    command: >
      bash -c "bundle install &&
      yarn install --check-files &&
      bin/rake db:create &&
      /bin/bash"
    ports:
      - '3000:3000'

  runner:
    <<: *backend
    <<: *backend-volumes
    command: /bin/bash
    ports:
      - '3002:3002'

  sidekiq:
    <<: *backend
    <<: *backend-volumes
    command: bundle exec sidekiq -C config/sidekiq.yml

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data
    ports:
      - 6379

  webpacker:
    <<: *app
    <<: *backend-volumes
    command: ./bin/webpack-dev-server
    ports:
      - '3035:3035'
    environment:
      <<: *env
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0

  postgres:
    image: postgres:12.1
    volumes:
      - .dockerdev/init_postgres/:/docker-entrypoint-initdb.d/
      - .dockerdev/.psqlrc:/root/.psqlrc:ro
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
    ports:
      - '5432:5432'

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
  redis:
